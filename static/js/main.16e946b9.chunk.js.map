{"version":3,"sources":["components/Header.tsx","components/Menu.tsx","pages/About.tsx","pages/Profile.tsx","components/TweetArea.tsx","components/TweetCard.tsx","pages/Timeline.tsx","components/Twitter.tsx","index.tsx"],"names":["Header","className","Menu","menuItems","onClick","selectedMenuItemId","history","useHistory","liList","map","menuItem","selected","id","key","push","to","title","About","href","icon","faGithubAlt","Profile","name","onChange","type","value","event","target","TweetArea","useState","text","setText","count","setCount","disabled","setDisabled","length","placeholder","TweetCard","Timeline","users","tweets","tweetCards","sort","a","b","tweet","find","user","userId","Twitter","root","setSelectedMenuItemId","setUsers","setTweets","path","newUsers","Math","max","newTweets","concat","window","location","replace","origin","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16e946b9.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n    return (\n        <h1 className=\"header__item--title\">ツイッター</h1>\n    )\n}\n\nexport default Header\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport MenuItem from \"../types/MenuItem\";\n\nexport interface Props {\n    menuItems: MenuItem[]\n    selectedMenuItemId: number\n    onClick: (id: number) => void\n}\n\nfunction Menu({ menuItems, onClick, selectedMenuItemId }: Props) {\n    const history = useHistory()\n\n    const liList = menuItems.map((menuItem) => {\n        const selected = menuItem.id === selectedMenuItemId\n\n        return (\n            <li className={`menu__item ${selected && \"menu__item--selected\"}`} key={menuItem.id}>\n                {/*eslint-disable-next-line*/}\n                <a\n                    onClick={() => {\n                        onClick(menuItem.id)\n                        history.push(menuItem.to)\n                    }}\n                >\n                    {menuItem.title}\n                </a>\n            </li>\n        )\n    })\n\n    return(\n        <div className=\"menu\">\n            <ul className=\"menu__container\">\n                {liList}\n            </ul>\n        </div>\n    )\n}\n\nexport default Menu\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithubAlt } from \"@fortawesome/free-brands-svg-icons\";\n\nfunction About() {\n    return (\n        <div className=\"about\">\n            <p>このサイトは完全にツイッターです。</p>\n            <a href=\"https://github.com/shutarou-iijima/react-sample\">\n                <FontAwesomeIcon icon={faGithubAlt} />\n            </a>\n        </div>\n    )\n}\n\nexport default About\n","import React from \"react\";\n\ninterface Prop {\n    name: string\n    onChange: (value: string) => void\n}\n\nfunction Profile({ name, onChange }: Prop) {\n    return (\n        <div className=\"profile\">\n            <label>\n                名前：\n                <input\n                    id=\"profile__input\"\n                    type=\"text\"\n                    value={name}\n                    onChange={(event) => {\n                        onChange(event.target.value)\n                    }}\n                />\n            </label>\n        </div>\n    )\n}\n\nexport default Profile\n","import React, { useState } from \"react\";\n\ninterface Props {\n    onClick: (value: string) => void\n}\n\nfunction TweetArea({ onClick }: Props) {\n    const [text, setText] = useState('')\n    const [count, setCount] = useState(0)\n    const [disabled, setDisabled] = useState(true)\n\n    return (\n        <div className=\"tweetarea\">\n            <div>\n                {count} / 140\n            </div>\n            <div>\n                <textarea\n                    className=\"tweetarea__textarea\"\n                    value={text}\n                    onChange={ (event) => {\n                        const value = event.target.value\n                        if (value.length > 140) {\n                            return\n                        }\n                        setDisabled(value.length === 0)\n                        setCount(value.length)\n                        setText(value)\n                    }}\n                    placeholder=\"何を呟く？\"\n                />\n            </div>\n            <div>\n                <button\n                    type=\"button\"\n                    className=\"tweetarea__submit\"\n                    disabled={disabled}\n                    onClick={ () => {\n                        if(count === 0) {\n                            return\n                        }\n\n                        onClick(text)\n                        setDisabled(true)\n                        setCount(0)\n                        setText('')\n                    }}\n                >\n                    呟く\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default TweetArea\n","import React from \"react\";\n\nexport interface Props {\n    name: string\n    value: string\n}\n\nfunction TweetCard({ name, value }: Props) {\n    return (\n        <div className=\"tweetcard\">\n            <div className=\"tweetcard__name\">\n                {name}\n            </div>\n            <div className=\"tweetcard__value\">\n                {value}\n            </div>\n        </div>\n    )\n}\n\nexport default TweetCard\n","import React from \"react\";\nimport TweetArea from \"../components/TweetArea\";\nimport TweetCard from \"../components/TweetCard\";\nimport Tweet from \"../types/Tweet\";\nimport User from \"../types/User\";\n\nexport interface Props {\n    users: User[]\n    tweets: Tweet[]\n    onClick: (value: string) => void\n}\n\nfunction Timeline({ users, tweets, onClick }: Props) {\n\n    const tweetCards = [...tweets]\n        .sort((a, b) => {\n            return b.id - a.id\n        })\n        .map(tweet => {\n            const name = users.find(user => tweet.userId === user.id)!.name\n            return <TweetCard name={name} value={tweet.value} key={tweet.id}/>\n        })\n\n    return (\n        <div className=\"timeline\">\n            <TweetArea onClick={onClick}/>\n            <div className=\"tweetcard__container\">\n                {tweetCards}\n            </div>\n        </div>\n    )\n}\n\nexport default Timeline\n","import React, { useState } from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport About from \"../pages/About\";\nimport Profile from \"../pages/Profile\";\nimport Timeline from \"../pages/Timeline\";\nimport MenuItem from \"../types/MenuItem\";\nimport User from \"../types/User\";\nimport Tweet from \"../types/Tweet\";\n\ninterface Props {\n    root: string\n}\n\nfunction Twitter({ root }: Props) {\n    const [menuItems] = useState<MenuItem[]>([\n        { id: 1, to: `${root}`, title: 'タイムライン' },\n        { id: 2, to: `${root}profile`, title: 'プロフィール' },\n        { id: 3, to: `${root}about`, title: 'このサイトについて' },\n    ])\n\n    const [selectedMenuItemId, setSelectedMenuItemId] = useState<number>(1)\n\n    const [users, setUsers] = useState<User[]>([\n        { id: 1, name: '名無しの権兵衛'},\n        { id: 2, name: '太郎'},\n        { id: 3, name: '次郎'},\n        { id: 4, name: '三郎'},\n    ])\n\n    const [tweets, setTweets] = useState<Tweet[]>([\n        { id: 1, userId: 2, value: \"ラーメン食べたい\"},\n        { id: 2, userId: 3, value: \"あいうえおあいうえおあいうえおあいうえおあいうえおあいうえおあいうえおあいうえおあいうえお\"},\n        { id: 3, userId: 4, value: \"ラーメンとは、中華麺とスープを主とし、様々な具（チャーシュー、メンマ、味付け玉子、刻み葱、海苔など）を組み合わせた麺料理。漢字表記は拉麺、老麺[2]または柳麺。\"},\n    ])\n\n    return (\n        <Router>\n            <div className=\"twitter\">\n                <Header />\n                <Menu\n                    menuItems={menuItems}\n                    onClick={(id: number) => { setSelectedMenuItemId(id) }}\n                    selectedMenuItemId={selectedMenuItemId}\n                />\n                <main>\n                    <Switch>\n                        <Route path={root + 'about'}>\n                            <About />\n                        </Route>\n                        <Route path={root + 'profile'}>\n                            <Profile\n                                name={users[0].name}\n                                onChange={(value) => {\n                                    const newUsers = [...users]\n                                    newUsers[0].name = value\n                                    setUsers(newUsers)\n                                }}\n                            />\n                        </Route>\n                        <Route path={root}>\n                            <Timeline\n                                users={users}\n                                tweets={tweets}\n                                onClick={ (value) => {\n                                    const id = Math.max(...tweets.map(tweet => tweet.id)) + 1\n                                    const tweet = {\n                                        id: id,\n                                        userId: 1,\n                                        value: value,\n                                    }\n                                    const newTweets = [...tweets].concat(tweet)\n                                    setTweets(newTweets)\n                                }}\n                            />\n                        </Route>\n                    </Switch>\n                </main>\n            </div>\n        </Router>\n    )\n}\n\nexport default Twitter\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Twitter from \"./components/Twitter\";\n\nconst root = window.location.href.replace(window.location.origin, '')\n\nReactDOM.render(\n    <Twitter root={root} />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}