{"version":3,"sources":["components/Square.tsx","components/Board.tsx","components/Game.tsx","index.jsx"],"names":["Square","value","onClick","className","Board","i","this","props","squares","renderSquare","React","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","xIsNext","stepNumber","slice","current","setState","concat","step","status","winner","moves","map","move","desc","key","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"8PAeeA,MARf,YAA0C,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QACpB,OACI,4BAAQC,UAAU,SAASD,QAASA,GAC/BD,IC+BEG,E,2KAhCEC,GAAY,IAAD,OACpB,OACI,kBAAC,EAAD,CACIJ,MAAOK,KAAKC,MAAMC,QAAQH,GAC1BH,QAAU,kBAAM,EAAKK,MAAML,QAAQG,Q,+BAM3C,OACI,6BACI,yBAAKF,UAAU,aACVG,KAAKG,aAAa,GAClBH,KAAKG,aAAa,GAClBH,KAAKG,aAAa,IAEvB,yBAAKN,UAAU,aACVG,KAAKG,aAAa,GAClBH,KAAKG,aAAa,GAClBH,KAAKG,aAAa,IAEvB,yBAAKN,UAAU,aACVG,KAAKG,aAAa,GAClBH,KAAKG,aAAa,GAClBH,KAAKG,aAAa,S,GA1BnBC,IAAMC,WCmF1B,SAASC,EAAgBJ,GAWrB,IAVA,IAAMK,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFR,EAAI,EAAGA,EAAIQ,EAAMC,OAAQT,IAAK,CAAC,IAAD,cACjBQ,EAAMR,GADW,GAC5BU,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAIT,EAAQO,IAAMP,EAAQO,KAAOP,EAAQQ,IAAMR,EAAQO,KAAOP,EAAQS,GAClE,OAAOT,EAAQO,GAGvB,OAAO,KAGIG,M,kDAjGX,WAAYX,GAAe,IAAD,8BACtB,cAAMA,IACDY,MAAQ,CACTC,QAAS,CAAC,CACNZ,QAASa,MAAM,GAAGC,KAAK,QAE3BC,SAAS,EACTC,WAAY,GAPM,E,wDAWdnB,GACR,IAAMe,EAAUd,KAAKa,MAAMC,QAAQK,MAAM,EAAGnB,KAAKa,MAAMK,WAAa,GAC9DE,EAAUN,EAAQA,EAAQN,OAAS,GACnCN,EAAO,YAAOkB,EAAQlB,SAExBI,EAAgBJ,IAAYA,EAAQH,KAIxCG,EAAQH,GAAKC,KAAKa,MAAMI,QAAU,IAAM,IACxCjB,KAAKqB,SAAS,CACVP,QAASA,EAAQQ,OAAO,CAAC,CACrBpB,QAASA,KAEbe,SAAUjB,KAAKa,MAAMI,QACrBC,WAAYJ,EAAQN,Y,6BAIrBe,GACHvB,KAAKqB,SAAS,CACVH,WAAYK,EACZN,QAAUM,EAAO,IAAO,M,+BAItB,IAIFC,EAJC,OACCV,EAAUd,KAAKa,MAAMC,QACrBM,EAAUN,EAAQd,KAAKa,MAAMK,YAC7BO,EAASnB,EAAgBc,EAAQlB,SAGnCsB,EADDC,EACU,WAAaA,EAEhB,uBAAmBzB,KAAKa,MAAMI,QAAU,IAAM,KAGxD,IAAMS,EAAQZ,EAAQa,KAAI,SAACJ,EAAMK,GAC7B,IAAMC,EAAOD,EACT,eAAiBA,EACjB,mBAEJ,OACI,wBAAIE,IAAKF,GACL,4BAAQhC,QAAS,kBAAM,EAAKmC,OAAOH,KAAQC,OAKvD,OACI,yBAAKhC,UAAU,QACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CACIK,QAASkB,EAAQlB,QACjBN,QAAS,SAACG,GAAD,OAAO,EAAKiC,YAAYjC,OAGzC,yBAAKF,UAAU,aACX,6BAAM2B,GACN,4BAAKE,S,GAvENtB,IAAMC,WCRzB4B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.eb4ecfdc.chunk.js","sourcesContent":["import React from \"react\";\n\nexport interface Props {\n    value: String | null\n    onClick: () => void\n}\n\nfunction Square({value, onClick}: Props) {\n    return (\n        <button className=\"square\" onClick={onClick}>\n            {value}\n        </button>\n    )\n}\n\nexport default Square\n","import React from \"react\";\nimport Square from \"./Square\";\n\nexport interface Props {\n    squares: (String | null)[]\n    onClick: (i: number) => void\n}\n\nclass Board extends React.Component<Props, object> {\n    renderSquare(i: number) {\n        return (\n            <Square\n                value={this.props.squares[i]}\n                onClick={ () => this.props.onClick(i) }\n            />\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Board\n","import React from \"react\";\nimport Board from \"./Board\";\n\nexport interface Props {\n\n}\n\ninterface State {\n    history: any[]\n    xIsNext: boolean\n    stepNumber: number\n}\n\nclass Game extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }],\n            xIsNext: true,\n            stepNumber: 0,\n        }\n    }\n\n    handleClick(i: number) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1)\n        const current = history[history.length - 1]\n        const squares = [...current.squares]\n\n        if (calculateWinner(squares) || squares[i]) {\n            return\n        }\n\n        squares[i] = this.state.xIsNext ? 'X' : 'O'\n        this.setState({\n            history: history.concat([{\n                squares: squares\n            }]),\n            xIsNext: !this.state.xIsNext,\n            stepNumber: history.length\n        })\n    }\n\n    jumpTo(step: number) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0\n        })\n    }\n\n    render() {\n        const history = this.state.history\n        const current = history[this.state.stepNumber]\n        const winner = calculateWinner(current.squares)\n        let status\n        if(winner) {\n            status = 'Winner: ' + winner\n        } else {\n            status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\n        }\n\n        const moves = history.map((step, move) => {\n            const desc = move ?\n                'Go to move #' + move :\n                'Go to game start'\n\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            );\n        })\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        squares={current.squares}\n                        onClick={(i) => this.handleClick(i)}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction calculateWinner(squares: number[]) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n\nexport default Game\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from \"./components/Game\";\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}