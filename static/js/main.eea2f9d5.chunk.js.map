{"version":3,"sources":["components/Header.tsx","components/Menu.tsx","pages/About.tsx","pages/Profile.tsx","components/TweetArea.tsx","components/TweetCard.tsx","pages/Timeline.tsx","index.tsx"],"names":["Header","className","Menu","menuItems","onClick","selectedMenuItemId","history","useHistory","liList","map","menuItem","selected","id","key","push","to","title","About","href","icon","faGithubAlt","Profile","name","onChange","type","value","event","target","TweetArea","useState","text","setText","count","setCount","disabled","setDisabled","length","placeholder","TweetCard","Timeline","users","tweets","tweetCards","sort","a","b","tweet","find","user","userId","Twitter","props","state","this","setState","path","Math","max","newTweets","concat","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eea2f9d5.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n    return (\n        <h1 className=\"header__item--title\">ツイッター</h1>\n    )\n}\n\nexport default Header\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport MenuItem from \"../types/MenuItem\";\n\nexport interface Props {\n    menuItems: MenuItem[]\n    selectedMenuItemId: number\n    onClick: (id: number) => void\n}\n\nfunction Menu({ menuItems, onClick, selectedMenuItemId }: Props) {\n    const history = useHistory()\n\n    const liList = menuItems.map((menuItem) => {\n        const selected = menuItem.id === selectedMenuItemId\n\n        return (\n            <li className={`menu__item ${selected && \"menu__item--selected\"}`} key={menuItem.id}>\n                {/*eslint-disable-next-line*/}\n                <a\n                    onClick={() => {\n                        onClick(menuItem.id)\n                        history.push(menuItem.to)\n                    }}\n                >\n                    {menuItem.title}\n                </a>\n            </li>\n        )\n    })\n\n    return(\n        <div className=\"menu\">\n            <ul className=\"menu__container\">\n                {liList}\n            </ul>\n        </div>\n    )\n}\n\nexport default Menu\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithubAlt } from \"@fortawesome/free-brands-svg-icons\";\n\nfunction About() {\n    return (\n        <div className=\"about\">\n            <p>このサイトは完全にツイッターです。</p>\n            <a href=\"https://github.com/shutarou-iijima/react-sample\">\n                <FontAwesomeIcon icon={faGithubAlt} />\n            </a>\n        </div>\n    )\n}\n\nexport default About\n","import React from \"react\";\n\ninterface Prop {\n    name: string\n    onChange: (value: string) => void\n}\n\nfunction Profile({ name, onChange }: Prop) {\n    return (\n        <div className=\"profile\">\n            <label>\n                名前：\n                <input\n                    id=\"profile__input\"\n                    type=\"text\"\n                    value={name}\n                    onChange={(event) => {\n                        onChange(event.target.value)\n                    }}\n                />\n            </label>\n        </div>\n    )\n}\n\nexport default Profile\n","import React, { useState } from \"react\";\n\ninterface Props {\n    onClick: (value: string) => void\n}\n\nfunction TweetArea({ onClick }: Props) {\n    const [text, setText] = useState('')\n    const [count, setCount] = useState(0)\n    const [disabled, setDisabled] = useState(true)\n\n    return (\n        <div className=\"tweetarea\">\n            <div>\n                {count} / 140\n            </div>\n            <div>\n                <textarea\n                    className=\"tweetarea__textarea\"\n                    value={text}\n                    onChange={ (event) => {\n                        const value = event.target.value\n                        if (value.length > 140) {\n                            return\n                        }\n                        setDisabled(value.length === 0)\n                        setCount(value.length)\n                        setText(value)\n                    }}\n                    placeholder=\"何を呟く？\"\n                />\n            </div>\n            <div>\n                <button\n                    type=\"button\"\n                    className=\"tweetarea__submit\"\n                    disabled={disabled}\n                    onClick={ () => {\n                        if(count === 0) {\n                            return\n                        }\n\n                        onClick(text)\n                        setDisabled(true)\n                        setCount(0)\n                        setText('')\n                    }}\n                >\n                    呟く\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default TweetArea\n","import React from \"react\";\n\nexport interface Props {\n    name: string\n    value: string\n}\n\nfunction TweetCard({ name, value }: Props) {\n    return (\n        <div className=\"tweetcard\">\n            <div className=\"tweetcard__name\">\n                {name}\n            </div>\n            <div className=\"tweetcard__value\">\n                {value}\n            </div>\n        </div>\n    )\n}\n\nexport default TweetCard\n","import React from \"react\";\nimport TweetArea from \"../components/TweetArea\";\nimport TweetCard from \"../components/TweetCard\";\nimport Tweet from \"../types/Tweet\";\nimport User from \"../types/User\";\n\nexport interface Props {\n    users: User[]\n    tweets: Tweet[]\n    onClick: (value: string) => void\n}\n\nfunction Timeline({ users, tweets, onClick }: Props) {\n\n    const tweetCards = [...tweets]\n        .sort((a, b) => {\n            return b.id - a.id\n        })\n        .map(tweet => {\n            const name = users.find(user => tweet.userId === user.id)!.name\n            return <TweetCard name={name} value={tweet.value} key={tweet.id}/>\n        })\n\n    return (\n        <div className=\"timeline\">\n            <TweetArea onClick={onClick}/>\n            <div className=\"tweetcard__container\">\n                {tweetCards}\n            </div>\n        </div>\n    )\n}\n\nexport default Timeline\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Header from \"./components/Header\";\nimport Menu from \"./components/Menu\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport About from \"./pages/About\";\nimport Profile from \"./pages/Profile\";\nimport Timeline from \"./pages/Timeline\";\nimport Tweet from \"./types/Tweet\";\nimport MenuItem from \"./types/MenuItem\";\nimport User from \"./types/User\";\n\ninterface Props {\n\n}\n\ninterface State {\n    menuItems: MenuItem[]\n    selectedMenuItemId: number\n    users: User[]\n    tweets: Tweet[]\n}\n\nclass Twitter extends React.Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            menuItems: [\n                { id: 1, to: '/', title: 'タイムライン' },\n                { id: 2, to: '/profile', title: 'プロフィール' },\n                { id: 3, to: '/about', title: 'このサイトについて' },\n            ],\n            selectedMenuItemId: 1,\n            users: [\n                { id: 1, name: '名無しの権兵衛'},\n                { id: 2, name: '太郎'},\n                { id: 3, name: '次郎'},\n                { id: 4, name: '三郎'},\n            ],\n            tweets: [\n                { id: 1, userId: 2, value: \"ラーメン食べたい\"},\n                { id: 2, userId: 3, value: \"あいうえおあいうえおあいうえおあいうえおあいうえおあいうえおあいうえおあいうえおあいうえお\"},\n                { id: 3, userId: 4, value: \"ラーメンとは、中華麺とスープを主とし、様々な具（チャーシュー、メンマ、味付け玉子、刻み葱、海苔など）を組み合わせた麺料理。漢字表記は拉麺、老麺[2]または柳麺。\"},\n            ]\n        }\n    }\n\n    render() {\n        return (\n            <Router>\n                <div className=\"twitter\">\n                    <Header />\n                    <Menu\n                        menuItems={this.state.menuItems}\n                        onClick={(id: number) => { this.setState({ selectedMenuItemId: id }) }}\n                        selectedMenuItemId={this.state.selectedMenuItemId}\n                    />\n                    <main>\n                        <Switch>\n                            <Route path=\"/about\">\n                                <About />\n                            </Route>\n                            <Route path=\"/profile\">\n                                <Profile\n                                    name={this.state.users[0].name}\n                                    onChange={(value) => {\n                                        const users = [...this.state.users]\n                                        users[0].name = value\n                                        this.setState({\n                                            users: users\n                                        })\n                                    }}\n                                />\n                            </Route>\n                            <Route path=\"/\">\n                                <Timeline\n                                    users={this.state.users}\n                                    tweets={this.state.tweets}\n                                    onClick={ (value) => {\n                                        const id = Math.max(...this.state.tweets.map(tweet => tweet.id)) + 1\n                                        const tweet = {\n                                            id: id,\n                                            userId: 1,\n                                            value: value,\n                                        }\n                                        const newTweets = [...this.state.tweets].concat(tweet)\n                                        this.setState({\n                                            tweets: newTweets\n                                        })\n                                    }}\n                                />\n                            </Route>\n                        </Switch>\n                    </main>\n                </div>\n            </Router>\n        )\n    }\n}\n\nReactDOM.render(\n    <Twitter />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}